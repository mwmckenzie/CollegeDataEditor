
@using CollegeDataEditor.Services
@using CollegeDataEditor.Enums
@using CollegeDataEditor.ViewModels

@inject ViewModelService _viewModelService

<MudPaper Style="padding: 15px; margin-bottom: 10px;">

    <MudStack>
        <MudStack Row="true">
            <MudText Typo="Typo.h5">Filter</MudText>
            <MudSwitch @bind-Checked="str" Color="Color.Tertiary">filter: "@(str)"</MudSwitch>
        </MudStack>
        <MudSelect @bind-Value="@_programBrowserVM.selectedFilterType" Label="Select Filter Type" Placeholder="Please Select"
                   AdornmentIcon="@Icons.Material.Filled.FilterList" AdornmentColor="Color.Primary">
            <MudSelectItem Value="@("Subject")">Subject</MudSelectItem>
            <MudSelectItem Value="@("Topic")">Topic</MudSelectItem>
            <MudSelectItem Value="@("Tag")">Tag</MudSelectItem>
        </MudSelect>
    </MudStack>

</MudPaper>

@if (str == "on") {
    @switch (_programBrowserVM.selectedFilterType) {
        case "Subject":
            <FilterChipContainer filterType="FilterType.Subject"/>
            break;
        case "Topic":
            <FilterChipContainer filterType="FilterType.Topic"/>
            break;
        case "Tag":
            <FilterChipContainer filterType="FilterType.Tag"/>
            break;
    }
}


@code {

    [Parameter]
    public string str { get; set; } = "on";

    private ProgramBrowserViewModel _programBrowserVM;
    private string _filterTypeValue { get; set; }

    private string stringValue {
        get => _filterTypeValue;
        set {
            if (value == _filterTypeValue) {
                return;
            }
            _filterTypeValue = value;
            OnFilterValueChange();
        }
    }

    protected override Task OnInitializedAsync()
    {
        base.OnInitializedAsync();
        _programBrowserVM = _viewModelService.ProgramBrowserVM;
        _filterTypeValue = _programBrowserVM.selectedFilterType;
        
        OnFilterValueChange();
        return Task.CompletedTask;
    }

    private void OnFilterValueChange() {
        
        _programBrowserVM.selectedFilter = string.Empty;
        _programBrowserVM.selectedFilterType = _filterTypeValue;
    }


}