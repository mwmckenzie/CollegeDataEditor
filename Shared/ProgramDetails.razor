@using System.Collections
@using CollegeDataEditor.Models
@using CollegeDataEditor.Services
@using Microsoft.AspNetCore.Components.Authorization

@inject LookupService LookupService
@inject ViewModelService ViewModelService

<MudPaper Class="pa-4">
    
    <div class="d-flex flex-grow-1 justify-space-between mb-4">
        @if (IsSideView)
        {
            <MudTooltip Text="Jump To Program Page">
                <MudButton OnClick="@OnExploreClickCallback" 
                           Color="Color.Tertiary" Variant="Variant.Filled">
                    Explore
                </MudButton>
            </MudTooltip>
        }
        <MudSpacer/>
    
        <AuthorizeView Roles="editor">
            <Authorized>
                <MudButtonGroup Class="" Color="Color.Primary" Variant="Variant.Filled" OverrideStyles="false">
                    <MudTooltip Text="Send To Editor">
                        <MudButton OnClick="@OnEditClickCallback">Edit</MudButton>
                    </MudTooltip>
                    <MudTooltip Text="Send A Copy To Editor">
                        <MudButton OnClick="@OnCopyClickCallback">Copy</MudButton>
                    </MudTooltip>
                    <MudTooltip Text="Send To Archives">
                        <MudButton Color="Color.Secondary" OnClick="OnDeleteClickCallback">
                            Archive
                        </MudButton>
                    </MudTooltip>
                </MudButtonGroup>
            </Authorized>
        </AuthorizeView>
    </div>
    
    <BaseInfoView baseInfoObj="@SummerProgram" objTitle="Summer Program"/>

    @if (SummerProgram.programTypeIdList.Count > 0)
    {
        <MudPaper Class="pa-4 mb-4">
            <MudText Typo="Typo.h4">Program Type</MudText>
            <MudDivider Class="my-2"/>
            @foreach (var progTypeId in SummerProgram.programTypeIdList)
            {
                <MudStack Row="true" Spacing="3" AlignItems="AlignItems.Center">
                    <MudIcon Icon="@Icons.Filled.Label"></MudIcon>
                    <MudText Typo="Typo.h6">@LookupService.FindProgramTypeById(progTypeId)</MudText>
                </MudStack>
            }
        </MudPaper>
    }

    @if (SummerProgram.subjectIdList.Count > 0)
    {
        <MudPaper Class="pa-4 mb-4">
            <MudText Typo="Typo.h4">Subjects</MudText>
            <MudDivider Class="my-2"/>
            @foreach (var subjId in SummerProgram.subjectIdList)
            {
                <MudStack Row="true" Spacing="3" AlignItems="AlignItems.Center">
                    <MudIcon Icon="@Icons.Filled.Label"></MudIcon>
                    <MudText Typo="Typo.h6">@LookupService.FindSubjectById(subjId).value</MudText>
                </MudStack>
            }
        </MudPaper>
    }

    @if (SummerProgram.topicIdList.Count > 0)
    {
        <MudPaper Class="pa-4 mb-4">
            <MudText Typo="Typo.h4">Topics</MudText>
            <MudDivider Class="my-2"/>
            @foreach (var topicId in SummerProgram.topicIdList)
            {
                <MudStack Row="true" Spacing="3" AlignItems="AlignItems.Center">
                    <MudIcon Icon="@Icons.Filled.Label"></MudIcon>
                    <MudText Typo="Typo.h6">@LookupService.FindTopicById(topicId).value</MudText>
                </MudStack>
            }
        </MudPaper>
    }

    @if (SummerProgram.orgIdList.Count > 0)
    {
        foreach (var orgId in SummerProgram.orgIdList)
        {
            <OrgView org="@LookupService.FindOrgById(orgId)"/>
        }
    }
    
    @if (SummerProgram.studentInfoIdList.Count > 0)
        {
            foreach (var studentInfoId in SummerProgram.studentInfoIdList)
            {
                <StudentInfoView studentInfo="@LookupService.FindStudentInfoById(studentInfoId)"/>
            }
        }

    @if (!IsSideView)
    {
        if (SummerProgram.applicationIdList.Count > 0)
        {
            <DateRangeView objTitle="Applications"
                           IdList="@SummerProgram.applicationIdList"
                           ApplicationLookUpList ="LookupService.applications"/>
            
        }
        if (SummerProgram.sessionIdList.Count > 0)
        {
            <DateRangeView objTitle="Sessions"
                           IdList="@SummerProgram.sessionIdList"
                           SessionLookUpList="LookupService.sessions"/>
            
        }
    }
    

    @* <MudStack Row="true" Spacing="3"> *@
    @*     <MudIcon Icon="@Icons.Filled.Map"></MudIcon> *@
    @*     <MudText Class="mr-4" Typo="Typo.h6">@summerProgram.regionId</MudText> *@
    @*     <MudText Typo="Typo.h6">@summerProgram.locale</MudText> *@
    @* </MudStack> *@
    @* *@
    @* <MudStack Row="true" Spacing="3"> *@
    @*     <MudIcon Icon="@Icons.Filled.School"></MudIcon> *@
    @*     <MudText Class="mr-4" Typo="Typo.h6">@summerProgram.mainCampus</MudText> *@
    @*     <MudText Typo="Typo.h6">@summerProgram.genderRestriction</MudText> *@
    @* </MudStack> *@
    @* *@
    @* <MudPaper Class="mt-2 mb-2 pa-2"> *@
    @*     <MudText Typo="Typo.subtitle2">Carnegie Basic</MudText> *@
    @*     <MudText Typo="Typo.h6">@summerProgram.carnegieBasic</MudText> *@
    @* *@
    @*     <MudText Typo="Typo.subtitle2" Class="mt-4">Carnegie Undergrad</MudText> *@
    @*     <MudText Typo="Typo.h6">@summerProgram.carnegieUndergrad</MudText> *@
    @* *@
    @*     <MudText Typo="Typo.subtitle2" Class="mt-4">Carnegie Size & Setting</MudText> *@
    @*     <MudText Typo="Typo.h6">@summerProgram.carnegieSizeSetting</MudText> *@
    @* *@
    @*     <MudText Typo="Typo.subtitle2" Class="mt-4">Type</MudText> *@
    @*     <MudText Typo="Typo.h6">@summerProgram.ownership</MudText> *@
    @*     <MudText Typo="Typo.h6">Online Only: @summerProgram.onlineOnly</MudText> *@
    @* *@
    @*     @if (summerProgram.aliasListToString != string.Empty) { *@
    @*         <MudText Typo="Typo.subtitle2" Class="mt-4">Nicknames</MudText> *@
    @*         <MudText Typo="Typo.body1">@summerProgram.aliasListToString</MudText> *@
    @*     } *@
    @* *@
    @*     @if (summerProgram.priceCalculatorUrl != string.Empty) { *@
    @*         <MudText Typo="Typo.subtitle2" Class="mt-4">Price Calculator</MudText> *@
    @*         <MudStack Row="true" Spacing="3"> *@
    @*             <MudIcon Icon="@Icons.Material.Filled.Link"></MudIcon> *@
    @*             <MudLink Href="@summerProgram.schoolUrl" Target="_blank" Typo="Typo.body1">@summerProgram.priceCalculatorUrl</MudLink> *@
    @*         </MudStack> *@
    @*     } *@
    @* </MudPaper> *@

</MudPaper>

@if (!IsSideView)
{
    
}

@code {
    
    [Parameter]
    public bool IsSideView { get; set; }

    [Parameter]
    public SummerProgram SummerProgram { get; set; } = new();
    
    [Parameter]
    public EventCallback<SummerProgram> SummerProgramChanged { get; set; }

    [Parameter]
    public EventCallback<MouseEventArgs> OnEditClickCallback { get; set; }

    [Parameter]
    public EventCallback<MouseEventArgs> OnCopyClickCallback { get; set; }

    [Parameter]
    public EventCallback<MouseEventArgs> OnDeleteClickCallback { get; set; }
    
    [Parameter]
    public EventCallback<MouseEventArgs> OnExploreClickCallback { get; set; }

    // private List<DateRangeObj> ProgramDateRangeList => GetEnumerable(
    //     LookupService.sessions.Where(x => SummerProgram.sessionIdList.Contains(x.id))).ToList();
    //
    // private IEnumerable<DateRangeObj> GetEnumerable(Object obj) {
    //     if (obj is not IList list) {
    //         return new List<DateRangeObj>();
    //     }
    //     if (list.Count < 1 || list[0] is not DateRangeObj) {
    //         return new List<DateRangeObj>();
    //     }
    //     return list.Cast<DateRangeObj>();
    // }

}